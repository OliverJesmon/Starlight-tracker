{"ast":null,"code":"var _jsxFileName = \"D:\\\\FinalProject\\\\Starlight-Tracker\\\\frontend\\\\src\\\\components\\\\StarLightFeature.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StarLightFeature = () => {\n  _s();\n  const [stars, setStars] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/api/data'); // Fetching data from the Flask backend\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setStars(data.stars);\n      } catch (error) {\n        console.error('Error fetching star data:', error);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stars\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: stars.length > 0 ? stars.map((star, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: star\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No stars available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(StarLightFeature, \"MpMl4xT356TDKICdFBbojt4n5zM=\");\n_c = StarLightFeature;\nexport default StarLightFeature;\nvar _c;\n$RefreshReg$(_c, \"StarLightFeature\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","StarLightFeature","_s","stars","setStars","fetchData","response","fetch","ok","Error","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","star","index","_c","$RefreshReg$"],"sources":["D:/FinalProject/Starlight-Tracker/frontend/src/components/StarLightFeature.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\n\r\nconst StarLightFeature = () => {\r\n    const [stars, setStars] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch('/api/data'); // Fetching data from the Flask backend\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                const data = await response.json();\r\n                setStars(data.stars);\r\n            } catch (error) {\r\n                console.error('Error fetching star data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []); // Empty dependency array means this effect runs once on mount\r\n\r\n    return (\r\n        <div>\r\n            <h2>Stars</h2>\r\n            <ul>\r\n                {stars.length > 0 ? (\r\n                    stars.map((star, index) => (\r\n                        <li key={index}>{star}</li>\r\n                    ))\r\n                ) : (\r\n                    <li>No stars available</li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StarLightFeature;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;QAC3C,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAClD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCP,QAAQ,CAACM,IAAI,CAACP,KAAK,CAAC;MACxB,CAAC,CAAC,OAAOS,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD;IACJ,CAAC;IAEDP,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACIL,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdlB,OAAA;MAAAc,QAAA,EACKX,KAAK,CAACgB,MAAM,GAAG,CAAC,GACbhB,KAAK,CAACiB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAClBtB,OAAA;QAAAc,QAAA,EAAiBO;MAAI,GAAZC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAC7B,CAAC,gBAEFlB,OAAA;QAAAc,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAC7B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAChB,EAAA,CAlCID,gBAAgB;AAAAsB,EAAA,GAAhBtB,gBAAgB;AAoCtB,eAAeA,gBAAgB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}