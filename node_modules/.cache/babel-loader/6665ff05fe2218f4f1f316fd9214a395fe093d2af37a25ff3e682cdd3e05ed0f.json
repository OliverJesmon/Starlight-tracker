{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\MajorPendriveProject\\\\code\\\\FinalProject\\\\Starlight-Tracker\\\\frontend\\\\src\\\\pages\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport * as THREE from \"three\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConstellationIdentifier = () => {\n  _s();\n  const [videoStream, setVideoStream] = useState(null);\n  const [loading, setLoading] = useState(false); // To show loading state\n  const cameraRef = useRef(null);\n  const canvasRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const navigate = useNavigate(); // React Router's navigation function\n\n  const openCamera = () => {\n    const video = cameraRef.current;\n    if (!video) return;\n    video.style.display = \"block\";\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      video.srcObject = stream;\n      setVideoStream(stream);\n    }).catch(error => {\n      console.error(\"Error accessing camera: \", error);\n      alert(\"Could not access the camera. Please try again or check permissions.\");\n    });\n  };\n  const capturePhoto = () => {\n    const video = cameraRef.current;\n    const canvas = canvasRef.current;\n    if (!video || !canvas) return;\n    const context = canvas.getContext(\"2d\");\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n    canvas.toBlob(blob => {\n      const file = new File([blob], \"captured_photo.png\", {\n        type: \"image/png\"\n      });\n      const dataTransfer = new DataTransfer();\n      dataTransfer.items.add(file);\n      fileInputRef.current.files = dataTransfer.files;\n      if (videoStream) {\n        videoStream.getTracks().forEach(track => track.stop());\n      }\n      video.style.display = \"none\";\n\n      // After capturing, submit the image\n      handleSubmit(file);\n    });\n  };\n  const handleSubmit = async file => {\n    setLoading(true); // Show loading indicator\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await axios.post(\"https://0140-34-168-67-255.ngrok-free.app/predict\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(\"Prediction response:\", response.data);\n\n      // Navigate to another webpage, e.g., results page\n      navigate(\"/results\", {\n        state: {\n          prediction: response.data\n        }\n      });\n    } catch (error) {\n      console.error(\"Error uploading image:\", error);\n      alert(\"Failed to upload the image. Please try again.\");\n    } finally {\n      setLoading(false); // Hide loading indicator\n    }\n  };\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      alpha: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n    renderer.setClearColor(0x000000);\n\n    // Create a star field\n    const starsGeometry = new THREE.BufferGeometry();\n    const starCount = 5000;\n    const positions = new Float32Array(starCount * 3);\n    for (let i = 0; i < starCount; i++) {\n      positions[i * 3] = (Math.random() - 0.5) * 2000;\n      positions[i * 3 + 1] = (Math.random() - 0.5) * 2000;\n      positions[i * 3 + 2] = (Math.random() - 0.5) * 2000;\n    }\n    starsGeometry.setAttribute(\"position\", new THREE.BufferAttribute(positions, 3));\n    const starsMaterial = new THREE.PointsMaterial({\n      color: 0xffffff,\n      size: 0.5\n    });\n    const stars = new THREE.Points(starsGeometry, starsMaterial);\n    scene.add(stars);\n    camera.position.z = 10;\n\n    // Animation loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n      stars.rotation.y += 0.001;\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n      document.body.removeChild(renderer.domElement);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Constellation Identifier\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        ref: fileInputRef,\n        accept: \"image/*\",\n        required: true,\n        onChange: e => handleSubmit(e.target.files[0]) // Handle upload directly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Or\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: openCamera,\n        children: \"Open Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: capturePhoto,\n        children: \"Capture Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        id: \"camera\",\n        ref: cameraRef,\n        width: \"300\",\n        height: \"300\",\n        autoPlay: true,\n        style: {\n          display: \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"canvas\",\n        ref: canvasRef,\n        width: \"300\",\n        height: \"300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Uploading and predicting... Please wait.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(ConstellationIdentifier, \"GWhfN4AcVfoMWwGexlb7cg4p9SM=\", false, function () {\n  return [useNavigate];\n});\n_c = ConstellationIdentifier;\nexport default ConstellationIdentifier;\nvar _c;\n$RefreshReg$(_c, \"ConstellationIdentifier\");","map":{"version":3,"names":["React","useEffect","useRef","useState","THREE","axios","useNavigate","jsxDEV","_jsxDEV","ConstellationIdentifier","_s","videoStream","setVideoStream","loading","setLoading","cameraRef","canvasRef","fileInputRef","navigate","openCamera","video","current","style","display","navigator","mediaDevices","getUserMedia","then","stream","srcObject","catch","error","console","alert","capturePhoto","canvas","context","getContext","drawImage","width","height","toBlob","blob","file","File","type","dataTransfer","DataTransfer","items","add","files","getTracks","forEach","track","stop","handleSubmit","formData","FormData","append","response","post","headers","log","data","state","prediction","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","alpha","setSize","document","body","appendChild","domElement","setClearColor","starsGeometry","BufferGeometry","starCount","positions","Float32Array","i","Math","random","setAttribute","BufferAttribute","starsMaterial","PointsMaterial","color","size","stars","Points","position","z","animate","requestAnimationFrame","rotation","y","render","handleResize","aspect","updateProjectionMatrix","addEventListener","removeEventListener","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","ref","accept","required","onChange","e","target","onClick","id","autoPlay","_c","$RefreshReg$"],"sources":["D:/Projects/MajorPendriveProject/code/FinalProject/Starlight-Tracker/frontend/src/pages/FileUpload.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport * as THREE from \"three\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst ConstellationIdentifier = () => {\n  const [videoStream, setVideoStream] = useState(null);\n  const [loading, setLoading] = useState(false); // To show loading state\n  const cameraRef = useRef(null);\n  const canvasRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const navigate = useNavigate(); // React Router's navigation function\n\n  const openCamera = () => {\n    const video = cameraRef.current;\n    if (!video) return;\n\n    video.style.display = \"block\";\n\n    navigator.mediaDevices\n      .getUserMedia({ video: true })\n      .then((stream) => {\n        video.srcObject = stream;\n        setVideoStream(stream);\n      })\n      .catch((error) => {\n        console.error(\"Error accessing camera: \", error);\n        alert(\"Could not access the camera. Please try again or check permissions.\");\n      });\n  };\n\n  const capturePhoto = () => {\n    const video = cameraRef.current;\n    const canvas = canvasRef.current;\n    if (!video || !canvas) return;\n\n    const context = canvas.getContext(\"2d\");\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n    canvas.toBlob((blob) => {\n      const file = new File([blob], \"captured_photo.png\", { type: \"image/png\" });\n\n      const dataTransfer = new DataTransfer();\n      dataTransfer.items.add(file);\n      fileInputRef.current.files = dataTransfer.files;\n\n      if (videoStream) {\n        videoStream.getTracks().forEach((track) => track.stop());\n      }\n      video.style.display = \"none\";\n\n      // After capturing, submit the image\n      handleSubmit(file);\n    });\n  };\n\n  const handleSubmit = async (file) => {\n    setLoading(true); // Show loading indicator\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const response = await axios.post(\"https://0140-34-168-67-255.ngrok-free.app/predict\", formData, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      });\n\n      console.log(\"Prediction response:\", response.data);\n\n      // Navigate to another webpage, e.g., results page\n      navigate(\"/results\", { state: { prediction: response.data } });\n    } catch (error) {\n      console.error(\"Error uploading image:\", error);\n      alert(\"Failed to upload the image. Please try again.\");\n    } finally {\n      setLoading(false); // Hide loading indicator\n    }\n  };\n\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({ alpha: true });\n\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n    renderer.setClearColor(0x000000);\n\n    // Create a star field\n    const starsGeometry = new THREE.BufferGeometry();\n    const starCount = 5000;\n    const positions = new Float32Array(starCount * 3);\n\n    for (let i = 0; i < starCount; i++) {\n      positions[i * 3] = (Math.random() - 0.5) * 2000;\n      positions[i * 3 + 1] = (Math.random() - 0.5) * 2000;\n      positions[i * 3 + 2] = (Math.random() - 0.5) * 2000;\n    }\n\n    starsGeometry.setAttribute(\"position\", new THREE.BufferAttribute(positions, 3));\n    const starsMaterial = new THREE.PointsMaterial({ color: 0xffffff, size: 0.5 });\n    const stars = new THREE.Points(starsGeometry, starsMaterial);\n    scene.add(stars);\n\n    camera.position.z = 10;\n\n    // Animation loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n      stars.rotation.y += 0.001;\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n      document.body.removeChild(renderer.domElement);\n    };\n  }, []);\n\n  return (\n    <div className=\"content\">\n      <h1>Constellation Identifier</h1>\n      <form>\n        <input\n          type=\"file\"\n          name=\"file\"\n          ref={fileInputRef}\n          accept=\"image/*\"\n          required\n          onChange={(e) => handleSubmit(e.target.files[0])} // Handle upload directly\n        />\n        <h2>Or</h2>\n        <button type=\"button\" onClick={openCamera}>\n          Open Camera\n        </button>\n        <button type=\"button\" onClick={capturePhoto}>\n          Capture Photo\n        </button>\n\n        <video id=\"camera\" ref={cameraRef} width=\"300\" height=\"300\" autoPlay style={{ display: \"none\" }} />\n        <canvas id=\"canvas\" ref={canvasRef} width=\"300\" height=\"300\" />\n\n        {loading && <p>Uploading and predicting... Please wait.</p>}\n      </form>\n    </div>\n  );\n};\n\nexport default ConstellationIdentifier;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}